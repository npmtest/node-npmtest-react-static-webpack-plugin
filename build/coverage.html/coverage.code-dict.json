{"/home/travis/build/npmtest/node-npmtest-react-static-webpack-plugin/test.js":"/* istanbul instrument in package npmtest_react_static_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-static-webpack-plugin/lib.npmtest_react_static_webpack_plugin.js":"/* istanbul instrument in package npmtest_react_static_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_static_webpack_plugin = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_static_webpack_plugin = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-static-webpack-plugin/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-static-webpack-plugin && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_static_webpack_plugin */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_static_webpack_plugin\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_static_webpack_plugin.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_static_webpack_plugin.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_static_webpack_plugin.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_static_webpack_plugin.__dirname + '/lib.npmtest_react_static_webpack_plugin.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-static-webpack-plugin/node_modules/react-static-webpack-plugin/dist/index.js":"'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /**\nnnebpack Plugin Resources:\nhttps://github.com/andreypopp/webpack-stylegen/blob/master/lib/webpack/index.js#L5\nhttps://github.com/webpack/extract-text-webpack-plugin/blob/v1.0.1/loader.js#L62\nhttps://github.com/kevlened/debug-webpack-plugin/blob/master/index.js\nhttps://github.com/ampedandwired/html-webpack-plugin/blob/v2.0.3/index.js\nn\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _server = require('react-dom/server');\n\nvar _reactRouter = require('react-router');\n\nvar _bluebird = require('bluebird');\n\nvar _bluebird2 = _interopRequireDefault(_bluebird);\n\nvar _isFunction = require('lodash/isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _utils = require('./utils.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = require('debug')('react-static-webpack-plugin:index');\n\nvar renderToStaticDocument = function renderToStaticDocument(Component, props) {\n  return '<!doctype html>' + (0, _server.renderToStaticMarkup)(_react2.default.createElement(Component, props));\n};\n\nvar validateOptions = function validateOptions(options) {\n  if (!options) {\n    throw new Error('No options provided');\n  }\n  if (!options.routes && !options.component) {\n    throw new Error('No component or routes param provided');\n  }\n  if (!options.template) {\n    throw new Error('No template param provided');\n  }\n  if (options.renderToStaticMarkup && typeof options.renderToStaticMarkup !== 'boolean') {\n    throw new Error('Optional param renderToStaticMarkup must have a value of either true or false');\n  }\n};\n\nfunction StaticSitePlugin(options) {\n  validateOptions(options);\n  this.options = options;\n}\n\n/**\n * The same as the RR match function, but promisified.\n */\nvar promiseMatch = function promiseMatch(args) {\n  return new _bluebird2.default(function (resolve, reject) {\n    (0, _reactRouter.match)(args, function (error, redirectLocation, renderProps) {\n      resolve({ error: error, redirectLocation: redirectLocation, renderProps: renderProps });\n    }, reject);\n  });\n};\n\n/**\n * `compiler` is an instance of the Compiler\n * https://github.com/webpack/webpack/blob/master/lib/Compiler.js#L143\n *\n * NOTE: renderProps.routes is always passed as an array of route elements. For\n * deeply nested routes the last element in the array is the route we want to\n * get the props of, so we grab it out of the array and use it. This lets us do\n * things like:\n *\n *   <Route title='Blah blah blah...' {...moreProps} />\n *\n * Then set the document title to the title defined on that route\n *\n * NOTE: Sometimes when matching routes we do not get an error but nore do we\n * get renderProps. In my experience this usually means we hit an IndexRedirect\n * or some form of Route that doesn't actually have a component to render. In\n * these cases we simply keep on moving and don't render anything.\n *\n * TODO:\n * - Allow passing a function for title?\n *\n */\nStaticSitePlugin.prototype.apply = function (compiler) {\n  var _this = this;\n\n  var compilationPromise = void 0;\n\n  /**\n   * Compile everything that needs to be compiled. This is what the 'make'\n   * plugin is excellent for.\n   */\n  compiler.plugin('make', function (compilation, cb) {\n    var _options = _this.options,\n        component = _options.component,\n        routes = _options.routes,\n        template = _options.template,\n        reduxStore = _options.reduxStore;\n\n    // Promise loggers. These are simply for debugging\n\n    var promiseLog = function promiseLog(str) {\n      return function (x) {\n        debug('COMPILATION LOG: --' + str + '--', x);\n        return x;\n      };\n    };\n\n    var promiseErr = function promiseErr(str) {\n      return function (x) {\n        debug('COMPILATION ERR: --' + str + '--', x);\n        return _bluebird2.default.reject(x);\n      };\n    };\n\n    // Compile routes and template\n    var promises = [(0, _utils.compileAsset)({\n      filepath: routes || component,\n      outputFilename: (0, _utils.prefix)('routes.js'),\n      compilation: compilation,\n      context: compiler.context\n    }).then(promiseLog('routes')).catch(promiseErr('routes')), (0, _utils.compileAsset)({\n      filepath: template,\n      outputFilename: (0, _utils.prefix)('template.js'),\n      compilation: compilation,\n      context: compiler.context\n    }).then(promiseLog('template')).catch(promiseErr('template'))];\n\n    if (reduxStore) {\n      promises.push((0, _utils.compileAsset)({\n        filepath: reduxStore,\n        outputFilename: (0, _utils.prefix)('store.js'),\n        compilation: compilation,\n        context: compiler.context\n      }).then(promiseLog('reduxStore')).catch(promiseErr('reduxStore')));\n    }\n\n    compilationPromise = _bluebird2.default.all(promises).catch(function (err) {\n      return _bluebird2.default.reject(new Error(err));\n    }).finally(cb);\n  });\n\n  /**\n   * NOTE: It turns out that vm.runInThisContext works fine while evaluate\n   * failes. It seems evaluate the routes file in this example as empty, which\n   * it should not be... Not sure if switching to vm from evaluate will cause\n   * breakage so i'm leaving it in here with this note for now.\n   *\n   * compiler seems to be an instance of the Compiler\n   * https://github.com/webpack/webpack/blob/master/lib/Compiler.js#L143\n   *\n   * NOTE: renderProps.routes is always passed as an array of route elements. For\n   * deeply nested routes the last element in the array is the route we want to\n   * get the props of, so we grab it out of the array and use it. This lets us do\n   * things like:\n   *\n   *   <Route title='Blah blah blah...' {...moreProps} />\n   *\n   * Then set the document title to the title defined on that route\n   *\n   * NOTE: Sometimes when matching routes we do not get an error but nore do we\n   * get renderProps. In my experience this usually means we hit an IndexRedirect\n   * or some form of Route that doesn't actually have a component to render. In\n   * these cases we simply keep on moving and don't render anything.\n   *\n   * TODO:\n   * - Allow passing a function for title\n   */\n  compiler.plugin('emit', function (compilation, cb) {\n    compilationPromise.catch(cb) // TODO: Eval failed, likely a syntax error in build\n    .then(function (assets) {\n      if (assets instanceof Error) {\n        throw assets;\n      }\n\n      if (!assets) {\n        debug('Assets failed!', assets);\n        throw new Error('Compilation completed with undefined assets. This likely means\\n' + 'react-static-webpack-plugin had trouble compiling one of the entry\\n' + 'points specified in options. To get more detail, try running again\\n' + 'but prefix your build command with:\\n\\n' + '  DEBUG=react-static-webpack-plugin*\\n\\n' + 'That will enable debug logging and output more detailed information.');\n      }\n\n      // Remove all the now extraneous compiled assets and any sourceamps that\n      // may have been generated for them\n      (0, _utils.getExtraneousAssets)().forEach(function (key) {\n        debug('Removing extraneous asset and associated sourcemap. Asset name: \"' + key + '\"');\n        delete compilation.assets[key];\n        delete compilation.assets[key + '.map'];\n      });\n\n      var _assets = _slicedToArray(assets, 3),\n          routes = _assets[0],\n          template = _assets[1],\n          store = _assets[2];\n\n      if (!routes) {\n        throw new Error('Entry file compiled with empty source: ' + (_this.options.routes || _this.options.component));\n      }\n\n      routes = routes.routes || routes.default || routes;\n\n      if (template) {\n        template = template.default || template;\n      }\n\n      if (store) {\n        store = store.store || store.default || store;\n      }\n\n      if (_this.options.template && !(0, _isFunction2.default)(template)) {\n        throw new Error('Template file did not compile with renderable default export: ' + _this.options.template);\n      }\n\n      // Set up the render function that will be used later on\n      _this.render = function (props) {\n        return renderToStaticDocument(template, props);\n      };\n\n      var manifest = Object.keys(compilation.assets).reduce(function (agg, k) {\n        agg[k] = k;\n        return agg;\n      }, {});\n\n      var manifestKey = _this.options.manifest || 'manifest.json'; // TODO: Is it wise to default this? Maybe it should be explicit?\n      try {\n        var manifestAsset = compilation.assets[manifestKey];\n        if (manifestAsset) {\n          manifest = JSON.parse(manifestAsset.source());\n        } else {\n          debug('No manifest file found so default manifest will be provided');\n        }\n      } catch (err) {\n        debug('Error parsing manifest file:', err);\n      }\n\n      debug('manifest', manifest);\n\n      // Support rendering a single component without the need for react router.\n      if (!_this.options.routes && _this.options.component) {\n        debug('Entrypoint specified with `component` option. Rendering individual component.');\n        var options = _extends({}, (0, _utils.addHash)(_this.options, compilation.hash), {\n          manifest: manifest\n        });\n        compilation.assets['index.html'] = (0, _utils.renderSingleComponent)(routes, options, _this.render, store);\n        return cb();\n      }\n\n      var paths = (0, _utils.getAllPaths)(routes);\n      debug('Parsed routes:', paths);\n\n      // Make sure the user has installed redux dependencies if they passed in a\n      // store\n      var Provider = void 0;\n      if (store) {\n        try {\n          Provider = require('react-redux').Provider;\n        } catch (err) {\n          err.message = 'Looks like you provided the \\'reduxStore\\' option but there was an error importing these dependencies. Did you forget to install \\'redux\\' and \\'react-redux\\'?\\n' + err.message;\n          throw err;\n        }\n      }\n\n      _bluebird2.default.all(paths.map(function (location) {\n        return promiseMatch({ routes: routes, location: location }).then(function (_ref) {\n          var error = _ref.error,\n              redirectLocation = _ref.redirectLocation,\n              renderProps = _ref.renderProps;\n          var options = _this.options;\n\n          var logPrefix = 'react-static-webpack-plugin:';\n          var emptyBodyWarning = 'Route will be rendered with an empty body.';\n          var component = void 0;\n\n          if (redirectLocation) {\n            debug('Redirect encountered. Ignoring route: \"' + location + '\"', redirectLocation);\n            (0, _utils.log)(logPrefix + ' Redirect encountered: ' + location + ' -> ' + redirectLocation.pathname + '. ' + emptyBodyWarning);\n          } else if (error) {\n            debug('Error encountered matching route', location, error, redirectLocation, renderProps);\n            (0, _utils.log)(logPrefix + ' Error encountered rendering route \"' + location + '\". ' + emptyBodyWarning);\n          } else if (!renderProps) {\n            debug('No renderProps found matching route', location, error, redirectLocation, renderProps);\n            (0, _utils.log)(logPrefix + ' No renderProps found matching route \"' + location + '\". ' + emptyBodyWarning);\n          } else if (store) {\n            debug('Redux store provided. Rendering \"' + location + '\" within Provider.');\n            component = _react2.default.createElement(\n              Provider,\n              { store: store },\n              _react2.default.createElement(_reactRouter.RouterContext, renderProps)\n            );\n\n            // Make sure initialState will be provided to the template\n            options = _extends({}, options, { initialState: store.getState() });\n          } else {\n            component = _react2.default.createElement(_reactRouter.RouterContext, renderProps); // Successful render\n          }\n\n          var title = '';\n\n          if (renderProps) {\n            var route = renderProps.routes[renderProps.routes.length - 1]; // See NOTE\n            title = route.title;\n          }\n\n          var reactStaticCompilation = {\n            error: error,\n            redirectLocation: redirectLocation,\n            renderProps: renderProps,\n            location: location,\n            options: options };\n\n          var renderMethod = _this.options.renderToStaticMarkup === true ? _server.renderToStaticMarkup : _server.renderToString;\n          var body = component ? renderMethod(component) : '';\n          var assetKey = (0, _utils.getAssetKey)(location);\n          var doc = _this.render(_extends({}, (0, _utils.addHash)(options, compilation.hash), {\n            title: title,\n            body: body,\n            reactStaticCompilation: reactStaticCompilation,\n            manifest: manifest\n          }));\n\n          compilation.assets[assetKey] = {\n            source: function source() {\n              return doc;\n            },\n            size: function size() {\n              return doc.length;\n            }\n          };\n        });\n      })).catch(function (err) {\n        if (err) throw err;\n      }).finally(cb);\n    });\n  });\n};\n\nmodule.exports = StaticSitePlugin;","/home/travis/build/npmtest/node-npmtest-react-static-webpack-plugin/node_modules/react-static-webpack-plugin/dist/utils.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addHash = exports.log = exports.renderSingleComponent = exports.isRoute = exports.getAssetKey = exports.getAllPaths = exports.getNestedPaths = exports.compileAsset = exports.prefix = exports.getExtraneousAssets = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _vm = require('vm');\n\nvar _vm2 = _interopRequireDefault(_vm);\n\nvar _flattenDeep = require('lodash/flattenDeep');\n\nvar _flattenDeep2 = _interopRequireDefault(_flattenDeep);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _server = require('react-dom/server');\n\nvar _bluebird = require('bluebird');\n\nvar _bluebird2 = _interopRequireDefault(_bluebird);\n\nvar _SingleEntryPlugin = require('webpack/lib/SingleEntryPlugin');\n\nvar _SingleEntryPlugin2 = _interopRequireDefault(_SingleEntryPlugin);\n\nvar _jsdom = require('jsdom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar debug = require('debug')('react-static-webpack-plugin:utils');\n\nvar extraneousAssets = [];\n\n// Allow other files to get access to the extraneous assets\nvar getExtraneousAssets = exports.getExtraneousAssets = function getExtraneousAssets() {\n  return extraneousAssets;\n};\n\n/**\n * Adde a namespace/prefix to a filename so as to avoid naming conflicts with\n * things the user has created.\n */\nvar prefix = exports.prefix = function prefix(name) {\n  return '__react-static-webpack-plugin__' + name;\n};\n\n/**\n * Get all candidate absolute paths for the extract text plugin. If there are\n * none that's fine. We use these paths to patch extract-text-wepback-plugin\n * during compilation so that it doesn't throw a fit about loader-plugin\n * interop.\n */\nvar getExtractTextPluginPaths = function getExtractTextPluginPaths(compilation) {\n  var _compilation$compiler = compilation.compiler,\n      options = _compilation$compiler.options,\n      context = _compilation$compiler.context;\n\n  var paths = new Set(); // Ensure unique paths\n\n  if (context) {\n    paths.add(_path2.default.resolve(context, './node_modules/extract-text-webpack-plugin'));\n  }\n\n  if (options && options.context) {\n    paths.add(_path2.default.resolve(options.context, './node_modules/extract-text-webpack-plugin'));\n  }\n\n  try {\n    if (options.resolve.modules && options.resolve.modules.length) {\n      options.resolve.modules.forEach(function (x) {\n        paths.add(_path2.default.resolve(x, './extract-text-webpack-plugin'));\n      });\n    }\n  } catch (err) {\n    debug('Error resolving options.resolve.modules');\n  }\n\n  try {\n    if (options.resolveLoader.modules && options.resolveLoader.modules.length) {\n      options.resolveLoader.modules.forEach(function (x) {\n        paths.add(_path2.default.resolve(x, './extract-text-webpack-plugin'));\n      });\n    }\n  } catch (err) {\n    debug('Error resolving options.resolveLoader.modules');\n  }\n\n  return Array.from(paths).filter(_fs2.default.existsSync);\n};\n\n/**\n * Given the filepath of an asset (say js file) compile it and return the source\n */\nvar compileAsset = exports.compileAsset = function compileAsset(opts) {\n  var filepath = opts.filepath,\n      outputFilename = opts.outputFilename,\n      compilation = opts.compilation,\n      context = opts.context;\n\n  var compilerName = 'react-static-webpack compiling \"' + filepath + '\"';\n  var outputOptions = {\n    filename: outputFilename,\n    publicPath: compilation.outputOptions.publicPath\n  };\n  var rawAssets = {};\n\n  debug('Compilation context \"' + context + '\"');\n  debug('Compiling \"' + _path2.default.resolve(context, filepath) + '\"');\n\n  var childCompiler = compilation.createChildCompiler(compilerName, outputOptions);\n  childCompiler.apply(new _SingleEntryPlugin2.default(context, filepath));\n\n  // Patch extract text plugin\n  childCompiler.plugin('this-compilation', function (compilation) {\n    var extractTextPluginPaths = getExtractTextPluginPaths(compilation);\n    debug('this-compilation patching extractTextPluginPaths %O', extractTextPluginPaths);\n\n    // NOTE: This is taken directly from extract-text-webpack-plugin\n    // https://github.com/webpack/extract-text-webpack-plugin/blob/v1.0.1/loader.js#L62\n    //\n    // It seems that returning true allows the use of css modules while\n    // setting this equal to false makes the import of css modules fail, which\n    // means rendered pages do not have the correct classnames.\n    // loaderContext[x] = false;\n    compilation.plugin('normal-module-loader', function (loaderContext) {\n      extractTextPluginPaths.forEach(function (x) {\n        loaderContext[x] = function (content, opt) {\n          // See NOTE\n          return true;\n        };\n      });\n    });\n\n    /**\n     * In order to evaluate the raw compiled source files of assets instead of\n     * the minified or otherwise optimized version we hook into here and hold on\n     * to any chunk assets before they are compiled.\n     *\n     * NOTE: It is uncertain so far whether this source is actually the same as\n     * the unoptimized source of the file in question. I.e. it may not be the\n     * fullly compiled / bundled module code we want since this is not the emit\n     * callback.\n     */\n    compilation.plugin('optimize-chunk-assets', function (chunks, cb) {\n      var files = [];\n\n      // Collect all asset names\n      chunks.forEach(function (chunk) {\n        chunk.files.forEach(function (file) {\n          return files.push(file);\n        });\n      });\n      compilation.additionalChunkAssets.forEach(function (file) {\n        return files.push(file);\n      });\n\n      rawAssets = files.reduce(function (agg, file) {\n        agg[file] = compilation.assets[file];\n        return agg;\n      }, {});\n\n      // Update the extraneous assets to remove\n      // TODO: This does not actually collect all the apropriate assets. What we\n      // want is EVERY file that was compiled during this compilation, since we\n      // don't want to output any of them. So far this only gets the associated\n      // js files, like routes.js (with prefix)\n      extraneousAssets = [].concat(_toConsumableArray(extraneousAssets), files);\n\n      cb();\n    });\n  });\n\n  // Run the compilation async and return a promise\n  // NOTE: For some reason, require simply doesn't work as expected in the\n  // evaluated string src code. This was meant to be a temporary fix to fix the\n  // issue of requiring node-uuid. It would be better to find a way to fully\n  // support any module code. Specifically, code like this failse because the\n  // require function simply does not return the built in crypto module:\n  // https://github.com/crypto-browserify/crypto-browserify/blob/v3.2.6/rng.js\n  return new _bluebird2.default(function (resolve, reject) {\n    childCompiler.runAsChild(function (err, entries, childCompilation) {\n      // Resolve / reject the promise\n      if (childCompilation.errors && childCompilation.errors.length) {\n        var errorDetails = childCompilation.errors.map(function (err) {\n          return err.message + (err.error ? ':\\n' + err.error : '');\n        }).join('\\n');\n\n        reject(new Error('Child compilation failed:\\n' + errorDetails));\n      } else {\n        var asset = compilation.assets[outputFilename];\n\n        // See 'optimize-chunk-assets' above\n        if (rawAssets[outputFilename]) {\n          debug('Using raw source for ' + filepath);\n          asset = rawAssets[outputFilename];\n        }\n\n        resolve(asset);\n      }\n    });\n  }).then(function (asset) {\n    if (asset instanceof Error) {\n      debug(filepath + ' failed to copmile. Rejecting...');\n      return _bluebird2.default.reject(asset);\n    }\n\n    debug(filepath + ' compiled. Processing source...');\n\n    // Instantiate browser sandbox\n    var doc = (0, _jsdom.jsdom)('<html><body></body></html>');\n    var win = doc.defaultView;\n\n    // Pre-compile asset source\n    var script = new _vm2.default.Script(asset.source(), {\n      filename: filepath,\n      displayErrors: true\n    });\n\n    // Run it in the JSDOM context\n    return (0, _jsdom.evalVMScript)(win, script);\n  }).catch(function (err) {\n    debug(filepath + ' failed to process. Rejecting...');\n    return _bluebird2.default.reject(err);\n  });\n};\n\n// can be an React Element or a POJO\n\n\n/**\n * NOTE: We could likely use createRoutes to our advantage here. It may simplify\n * the code we currently use to recurse over the virtual dom tree:\n *\n * import { createRoutes } from 'react-router';\n * console.log(createRoutes(routes)); =>\n * [ { path: '/',\n *    component: [Function: Layout],\n *    childRoutes: [ [Object], [Object] ] } ]\n *\n * Ex:\n * const routes = (\n *   <Route component={App} path='/'>\n *     <Route component={About} path='/about' />\n *   </Route>\n * );\n *\n * getAllPaths(routes); => ['/', '/about]\n */\nvar getNestedPaths = exports.getNestedPaths = function getNestedPaths(route) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!route) return [];\n\n  if (Array.isArray(route)) return route.map(function (x) {\n    return getNestedPaths(x, prefix);\n  });\n\n  var path = route.props && route.props.path || route.path;\n  // Some routes such as redirects or index routes do not have a path. Skip\n  // them.\n  if (!path) return [];\n\n  path = prefix + path;\n  var nextPrefix = path === '/' ? path : path + '/';\n  var childRoutes = route.props && route.props.children || route.childRoutes;\n  return [path].concat(_toConsumableArray(getNestedPaths(childRoutes, nextPrefix)));\n};\n\nvar getAllPaths = exports.getAllPaths = function getAllPaths(routes) {\n  return (0, _flattenDeep2.default)(getNestedPaths(routes));\n};\n\n/**\n * Given a string location (i.e. path) return a relevant HTML filename.\n * Ex: '/' -> 'index.html'\n * Ex: '/about' -> 'about.html'\n * Ex: '/about/' -> 'about/index.html'\n * Ex: '/about/team' -> 'about/team.html'\n *\n * NOTE: Don't want leading slash\n * i.e. 'path/to/file.html' instead of '/path/to/file.html'\n *\n * NOTE: There is a lone case where the users specifices a not found route that\n * results in a '/*' location. In this case we output 404.html, since it's\n * assumed that this is a 404 route. See the RR changelong for details:\n * https://github.com/rackt/react-router/blob/1.0.x/CHANGES.md#notfound-route\n */\nvar getAssetKey = exports.getAssetKey = function getAssetKey(location) {\n  var basename = _path2.default.basename(location);\n  var dirname = _path2.default.dirname(location).slice(1); // See NOTE above\n  var filename = void 0;\n\n  if (location.slice(-1) === '/') {\n    filename = !basename ? 'index.html' : basename + '/index.html';\n  } else if (basename === '*') {\n    filename = '404.html';\n  } else {\n    filename = basename + '.html';\n  }\n\n  var result = dirname ? dirname + _path2.default.sep + filename : filename;\n\n  debug('Getting asset key: \"' + location + '\" -> \"' + result + '\"');\n\n  return result;\n};\n\n/**\n * Test if a React Element is a React Router Route or not. Note that this tests\n * the actual object (i.e. React Element), not a constructor. As such we\n * immediately deconstruct out the type property as that is what we want to\n * test.\n *\n * NOTE: Testing whether Component.type was an instanceof Route did not work.\n *\n * NOTE: This is a fragile test. The React Router API is notorious for\n * introducing breaking changes, so of the RR team changed the manditory path\n * and component props this would fail.\n */\nvar isRoute = exports.isRoute = function isRoute(_ref) {\n  var component = _ref.type;\n\n  return component && component.propTypes.path && component.propTypes.component;\n};\n\n/**\n * If not provided with any React Router Routes we try to render whatever asset\n * was passed to the plugin as a React component. The use case would be anyone\n * who doesn't need/want to add RR as a dependency to their app and instead only\n * wants a single HTML file output.\n *\n * NOTE: In the case of a single component we use the static prop 'title' to get\n * the page title. If this is not provided then the title will default to\n * whatever is provided in the template.\n */\nvar renderSingleComponent = exports.renderSingleComponent = function renderSingleComponent(imported, options, render, store) {\n  var Component = imported.default || imported;\n  var body = void 0;\n\n  var component = _react2.default.createElement(Component, null);\n\n  // Wrap the component in a Provider if the user passed us a redux store\n  if (store) {\n    debug('Store provider. Rendering single component within Provider.');\n    try {\n      var _require = require('react-redux'),\n          Provider = _require.Provider;\n\n      component = _react2.default.createElement(\n        Provider,\n        { store: store },\n        _react2.default.createElement(Component, null)\n      );\n\n      // Make sure initialState will be provided to the template. Don't mutate\n      // options directly\n      options = _extends({}, options, { initialState: store.getState() }); // eslint-disable-line no-param-reassign\n    } catch (err) {\n      err.message = 'Could not require react-redux. Did you forget to install it?\\n' + err.message;\n      throw err;\n    }\n  }\n\n  try {\n    debug('Rendering single component.');\n    body = (0, _server.renderToString)(component);\n  } catch (err) {\n    throw new Error('Invalid single component. Make sure you added your component as the default export from ' + options.routes);\n  }\n\n  var doc = render(_extends({}, options, {\n    title: Component.title, // See NOTE\n    body: body\n  }));\n\n  return {\n    source: function source() {\n      return doc;\n    },\n    size: function size() {\n      return doc.length;\n    }\n  };\n};\n\n/**\n * Only log in prod and dev. I.e. do not log on CI. The reason for logging\n * during prod is that we usually only build our bundles with\n * NODE_ENV=production prefixing the build command.\n */\nvar log = exports.log = function log() {\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production') {\n    var _console;\n\n    (_console = console).log.apply(_console, arguments);\n  }\n};\n\n/**\n * Add hash to all options that includes '[hash]' ex: bundle.[hash].js\n * NOTE: Only one hash for all files. So even if the css did not change it will get a new hash if the js changed.\n *\n * @param {Options} options\n * @param {string}  hash\n */\n\nvar addHash = exports.addHash = function addHash(options, hash) {\n  return Object.keys(options).reduce(function (previous, current) {\n    if (!(0, _isString2.default)(options[current])) {\n      previous[current] = options[current];\n      return previous;\n    }\n\n    previous[current] = options[current] && hash ? options[current].replace('[hash]', hash) : options[current];\n    return previous;\n  }, {});\n};","/home/travis/build/npmtest/node-npmtest-react-static-webpack-plugin/node_modules/react-static-webpack-plugin/.eslintrc.js":"module.exports = {\n  extends: \"zen\",\n  rules: {\n    // Inferred types are fine for now. If flow can't infer it it will yell at\n    // us.\n    'flowtype/require-parameter-type': [0],\n  },\n};\n","/home/travis/build/npmtest/node-npmtest-react-static-webpack-plugin/node_modules/react-static-webpack-plugin/utils.js":"const webpack = require('webpack');\n\nexport const compileWebpack = (options) => {\n  return new Promise((resolve, reject) => {\n    webpack(options, (err, stats) => {\n      if (err) {\n        return reject(err);\n      } else if (stats.hasErrors()) {\n        return reject(new Error(stats.toString()));\n      }\n\n      resolve(stats);\n    });\n  });\n};\n"}